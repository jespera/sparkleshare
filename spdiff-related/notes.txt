= Notes on ranking of spatches =

There have been discussion as to whether we would like to provide a language
(or other mechanism) for expressing the ranking we want to do on the returned
spatches.

There's a distinction we have so far not made: there's a difference between a
ranking property and a pruning property. A pruning property is used to
completely discard a result (and it can be optimizing if it closed/preserved
under extension). A ranking property is a property that allows one to decide
when a certain pattern is more desirable than another.


It would be nice to design a simple language for expressing pruning/ranking
properties.

Pros:
- The notion of what a "useful spatch" is becomes clearly evident to others
- One can come up with other notions of usefulness and rapidly try it out
- spdiff should be able to take use "optimizing pruning properties" to speed up
  running time
- 

Cons:
- If there really only is *one* good specification of "useful", we have created
  additional complexity for no apparent good reason
- 

= Example specifications =

"Multiple statements should share some metavariables"



s in SP, s' in SP, X in MV(s), X in MV(s')
=> s...s' ≼ SP || 
   s'...s ≼ SP

